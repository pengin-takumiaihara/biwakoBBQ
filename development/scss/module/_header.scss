.ly_header {
	position: absolute;
	top: 0;
	width: 100%;
}

.ly_header_inner {
	align-items: center;
	display: flex;
	@include maxmq(pc) {
		display: none;
	}
	@include maxmq(full) {
		padding: 20px;
	}
	justify-content: space-between;
	margin: 0 auto;
	max-width: 1330px;
	padding: 20px 0;
	width: 100%;
}

.bl_header_block {
	align-items: center;
	display: flex;
}

// ロゴ
.el_logo {
	margin-left: -25px;
	margin-top: 10px;
}

.el_header_list:not(:first-of-type) {
	@include maxmq(full) {
		margin-left: 28px;
	}
	margin-left: 35px;
}

.el_header_list:nth-last-of-type(2) {
	@include maxmq(full) {
		margin-left: 25px;
		width: 135px;
		img {
			width: 100%;
		}
	}
	margin-left: 43px;
}
.el_header_list:last-of-type {
	@include maxmq(full) {
		width: 175px;
		img {
			width: 100%;
		}
	}
	margin-left: 10px;
}

.el_header_list {
	font-family: robot;
	font-size: rem(14);

	a {
		color: #000;
		display: block;
		font-family: Roboto, Oxygen, Ubuntu, Cantarell, "is_open Sans", "Helvetica Neue", sans-serif;
		font-weight: 700;
		width: 100%;
	}
}

.el_header_list:hover a img {
	cursor: pointer;
}

// ***********************
// ハンバーガーメニュー
// ***********************
.el_headerBtn {
	display: none;
}
@include maxmq(pc) {
	.el_headerBtn {
		align-items: center;
		background-color: $accentSub_color;
		border-radius: 50%;
		display: flex;
		height: 57px;
		@include z-index(hamburgerIcon);
		justify-content: center;
		position: fixed;
		right: 15px;
		top: 17px;
		width: 57px;

		&:hover {
			cursor: pointer;
		}
	}

	// 真ん中
	.el_headerBtn_line {
		background-color: $sub_color;
		display: block;
		height: 4px;
		width: 27px;

		// 上下
		&::before , &::after {
			background-color: $sub_color;
			content: "";
			display: block;
			height: 100%;
			transition: transform .2s;
			width: 100%;
		}

		&::before {
			transform: translateY(-10px);
		}

		&::after {
			transform: translateY(6px);
		}

		// 展開時
		&.is_open {
			background-color: transparent;
		}

		&.is_open::before , &.is_open::after {
			content: "";
		}

		&.is_open::before {
			transform: rotate(45deg) translate(2px , 0);
		}

		&.is_open::after {
			transform: rotate(-45deg) translate(2px , -2px);
		}

		&:hover {
			cursor: pointer;
		}
	}

	// 展開時メニュースタイル
	// .ly_header_inner {
	// 	display: block;
	// }
}
